0. 
	0.1 repo使用教程
		https://blog.csdn.net/weixin_42215008/article/details/126343174		
		https://www.pudn.com/news/62fb0ab15425817ffc523aa3.html
			[同上]
		
		http://www.manongjc.com/detail/29-ljptrntuwrvqsoz.html
			#【含命令教程，及repo下载配置】
			#原文地址：https://www.cnblogs.com/cavange/p/16140296.html
		
		repo只是google用Python脚本写的调用git的一个脚本，主要是用来下载、管理Android项目的软件仓库。(也就是说，他是用来管理给git管理的一个个仓库的) 
		
		Repo学习
		https://blog.csdn.net/q1449660223/article/details/117991666
		
一、repo command
 1、repo forall -c git checkout A602 本地的分支切换
 2、repo forall -c git checkout -b A602G55 amlogic/A602G55 创建新分支，并且切换
 3、repo forall -p -c git branch 查看所有本地分支。并显示工程头。
	repo forall -p -c git branch -a 查看所有本地及远程分支。并显示工程头。
	
	repo branch //查看分支。
	
二、repo命令详解
	Usage: repo forall [<project>...] -c <command> [<arg>...]
	repo forall -r str1 [str2] ... -c <command> [<arg>...]"

    遍历所有的git仓库，并在每个仓库执行-c所指定的命令（被执行的命令不限于git命令，而是任何被系统支持的命令，比如：ls 、 pwd 、cp 等 。

	repo forall -h /--help 可以查看该命令的帮助
	Options:
	 -h, --help                                          show this help message and exit
	 -r, --regex                                         Execute the command only on projects matching regex or wildcard expression
	 -i, --inverse-regex                           Execute the command only on projects not matching regex or wildcard expression
	 -g, --groups=GROUPS                    Execute the command only on projects matching the specified groups
	 -c, --command                                Command (and arguments) to execute
	 -e, --abort-on-errors                     Abort if a command exits unsuccessfully
	Output:
	 -p                                                      Show project headers before output
	 -v, --verbose                                   Show command error messages
	 -j, --jobs=JOBS                                number of commands to execute simultaneously

	示例：
	下载新分支
	repo forall -c git checkout -b  本地分支名称（自定义）  服务器分支名称
	切换到另一个分支
	repo forall -c git checkout your_branch
	删除分支
	repo forall -c git branch -D  分支名称
	丢弃修改
	repo forall -c git git reset --hard HEAD
	repo  forall -r kernel/linux-3.10.y bootable/bootloader/uboot-2015.04  -c git reset --hard HEAD
	对指定的仓进行操作,-r后跟仓名
	不支持的命令：
	repo forall -c git checkout .
	--------------------- 
	作者：qwaszx523 
	来源：CSDN 
	原文：https://blog.csdn.net/qwaszx523/article/details/54405793 
	版权声明：本文为博主原创文章，转载请附上博文链接！
三、
	3.1 repo init
		repo init -u <URL> [<OPTIONS>]
		运行命令后会在当前目录生成.repo隐藏子目录，类似于.git，.repo下文件目录如上图所示

		repo：一个git库，包含repo命令运行的所有脚本
		manifests：一个git库，包含default.xml文件，用于描述repo所管理的git库的信息
		manifests.git：manifests这个库的实体，manifests/.git目录下的所有文件都会链接到该目录
		default.xml：manifests/default.xml的一个软链接
		——
	3.2 repo sync
		repo sync [PROJECT_LIST]
		运行该命令，会将远程代码同步到本地

		如果是第一次在本地git库使用此操作，则该命令相当于git clone
		如果不是第一次，则该命令等价于
		-git remote update
		-git rebase origin/<BRANCH>
		
		常用参数：
		-c，-current-branch：只同步指定的远程分支，默认情况下，会同步所有的远程分支，但这样代码量会大
		-d,-detach：脱离当前的本地分支，切换到manifest.xml中设定的分支。在实际操作中，这个参数很有用，当我们第一次sync完代码后，往往会切换到dev分支进行开发。如果不带该参数使用sync， 则会触发本地的dev分支与manifest设定的远程分支进行合并，这会很可能会导致sync失败
	3.3 repo start
		repo start <BRANCH_NAME> [<PROJECT_LIST>]
		
		在sync完代码后，所有git库默认都是在一个匿名分支上(no branch)，很容易会由于误操作导致丢失代码修改。
		在第一次sync完代码后，可以通过该命令将git库切换到开发分支BRANCH_NAME，避免在匿名分支上工作导致丢失改动内容的情况。该命令是对git checkout -b和git checkout命令的封装。
		—
	3.4 repo upload
		repo upload [PROJECT_LIST]
		使用该命令，会将本地代码上传到远程服务器，一般为Gerrit服务器，Gerrit服务器的地址是在.repo/manifests.xml中指定的。如果没有指定PROJECT_LIST，那么upload会找出所有git库的改动;如果某个git库有多个分支，upload会提供一个交互界面，提示选择其中若干个分支进行上传操作。
4. repo sync 指定分支后再同步
	repo同步代码_Android repo技巧：介绍repo sync是同步远端服务器的哪个分支
		https://blog.csdn.net/weixin_39946239/article/details/111614226
	
	
		查看 repo help sync 命令的帮助说明，该命令的格式如下：

		Usage: repo sync [...]
		可以看到，它没有提供参数来指定要同步的远端服务器分支。那么在执行 repo sync 时，它同步的是远端服务器的哪个分支？

		实际上，repo sync 默认同步在 repo init 时由 -b 选项指定的分支，这也是 repo 所跟踪的分支。
		—
	Android repo技巧：详解repo sync如何单独同步一个或多个仓库
		http://www.it619.net/index.php?doc-view-3032.html

0.资源
	0.1 官网
		https://git-scm.com/download/win 
	
1. git教程
	1.1 廖雪峰的git教程
		https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496
	1.2 图形化介绍GIT的网站：https://learngitbranching.js.org/?demo=&locale=zh_CN
2.  ! [rejected]        master     -> master  (non-fast-forward)
	 git push origin master : master //错误，":" 两边不能有空格。否则引发该错误。
	 
3. git合并时冲突<<<<<<< HEAD
	3.1 git合并时冲突<<<<<<< HEAD
		https://www.cnblogs.com/ziye/p/11175988.html
		
		<<<<<<< HEAD
		本地代码
		=======
		拉下来的代码
		>>>>>>>
4. GitHub加速
	4.1 Chrome 应用商店，安装插件。
		仓库处会显示加速地址
	4.2 GitHub加速及重新关联远端地址
		https://blog.csdn.net/wangshuaiwsws95/article/details/104730741
			博主使用的是码云。
			这时候克隆到本地的项目关联的是码云Gitee的地址，已经和原来的GitHub项目完全脱离了，是另外一个副本。需要重新关联。
		重新关联远端地址
		用文本编辑器打开.git文件夹中的config配置文件
		[remote "origin"].url字段重新关联到原来位于GitHub上的GitHub项目地址
	4.3 提高国内访问Github速度 
		https://blog.csdn.net/codinglover5/article/details/107826097
		1. GitHub 镜像访问
		这里提供两个最常用的镜像地址：

		https://github.com.cnpmjs.org

		https://hub.fastgit.org
		也就是说上面的镜像就是一个克隆版的Github，你可以访问上面的镜像网站，网站的内容跟Github是完整同步的镜像，然后在这个网站里面进行下载克隆等操作。
		2.
		3.
		...
		博文中有8种方式可以参考
		
	4.4 git pull 拉去代码很慢解决方法
		参考【4.1】【4.2】更改配置文件config中的url。拉去完成后再把url更改回去。保证提交时是自己的原始仓库地址哦。
	
5. 在原有仓库主分支上创建分支后提交到github服务器上。
	
	Administrator@USER-20190225WN MINGW64 /d/juying/workspace/hbuilder-workspace/games (debug_add_log_and_feature)
	$ git push origin debug_add_log_and_feature:debug_add_log_and_feature #执行的新分支提交命令。
	
	Username for 'https://github.com': juyingguo
	Total 0 (delta 0), reused 0 (delta 0)
	remote:
	remote: Create a pull request for 'debug_add_log_and_feature' on GitHub by visiting:
	remote:      https://github.com/juyingguo/games/pull/new/debug_add_log_and_feature
	remote:
	To https://github.com/juyingguo/games.git
	 * [new branch]      debug_add_log_and_feature -> debug_add_log_and_feature

	分析：
	提交非常快，1s中就完成了，好像并没有提交该分支代码到服务器，服务器端也创建分支成功了。
	原理是什么？待分析。
	
6. 【Git】如何更新或取消GitHub上fork的Repository
	https://blog.csdn.net/hongwei15732623364/article/details/80148376 
	
	6.2 github上fork了别人的项目后，再同步更新别人的提交
		https://blog.csdn.net/qq1332479771/article/details/56087333 
	 
7. git中tag与release的创建以及两者的区别
	7.1 https://www.jianshu.com/p/79ecf4fe5079 
		创建lightweight类型的tag：

		$ git tag v1.4-lw
		创建annotated类型的tag：

		$ git tag -a v1.4 -m "my version 1.4"
		
		$ git push origin v1.4 //提交
	7.2 创建 Releases 
		https://www.jianshu.com/p/b6e7c6b851ae 